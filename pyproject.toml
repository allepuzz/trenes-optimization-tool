[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trenes-optimization-tool"
version = "0.1.0"
description = "Spanish train ticket optimization tool with LangGraph agent and MCP server"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Angel", email = "your-email@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    # Core dependencies
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",

    # Web scraping
    "playwright>=1.40.0",
    "selenium>=4.15.0",

    # Agent framework
    "langgraph>=0.2.0",
    "langchain>=0.2.0",
    "langchain-community>=0.2.0",
    "langchain-openai>=0.1.0",

    # Data handling
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "sqlite-utils>=3.35.0",

    # API and server
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",

    # Utilities
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "loguru>=0.7.0",

    # Spanish timezone support
    "pytz>=2023.3",
    "babel>=2.13.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-playwright>=0.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",

    # Code quality
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",

    # Documentation
    "sphinx>=7.2.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",

    # Development tools
    "jupyter>=1.0.0",
    "ipython>=8.16.0",
]

mcp = [
    # MCP server dependencies
    "mcp>=1.0.0",
    "anyio>=4.0.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/trenes-optimization-tool"
Repository = "https://github.com/yourusername/trenes-optimization-tool"
Documentation = "https://github.com/yourusername/trenes-optimization-tool/docs"
"Bug Tracker" = "https://github.com/yourusername/trenes-optimization-tool/issues"

[project.scripts]
trenes-tool = "trenes_tool.cli:main"
trenes-agent = "trenes_agent.cli:main"
trenes-mcp = "trenes_mcp.server:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

# Black formatting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude generated files
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["trenes_tool", "trenes_agent", "trenes_mcp"]

# mypy type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]